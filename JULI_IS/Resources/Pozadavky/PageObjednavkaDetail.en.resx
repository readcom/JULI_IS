<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddItem" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="Ano" xml:space="preserve">
    <value>YES</value>
  </data>
  <data name="BtnTisk" xml:space="preserve">
    <value>Printed</value>
  </data>
  <data name="CelkovaCena" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="Datum" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeleteItemConfirm" xml:space="preserve">
    <value>Do you really want delete an item?</value>
  </data>
  <data name="Dne" xml:space="preserve">
    <value>Of the day</value>
  </data>
  <data name="Duvod" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="EditDodavatele" xml:space="preserve">
    <value>New / Edit supplier</value>
  </data>
  <data name="EditDodavatelePopis" xml:space="preserve">
    <value>select supplier and click the button to assign to the request</value>
  </data>
  <data name="fileDeleteConfirm" xml:space="preserve">
    <value>Do you really want delete the file?</value>
  </data>
  <data name="fileSuccessMessageText" xml:space="preserve">
    <value>The files were uploaded properly.</value>
  </data>
  <data name="fileUploadButtonText" xml:space="preserve">
    <value>Upload files (hold down CTRL to select multiple files)</value>
  </data>
  <data name="fileUploadErrorMessageText" xml:space="preserve">
    <value>Error while uploading files!</value>
  </data>
  <data name="Jmeno" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="kst" xml:space="preserve">
    <value>Cost centre</value>
  </data>
  <data name="kstVyber" xml:space="preserve">
    <value>Choose Cost centre</value>
  </data>
  <data name="mena" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="NabidkaCislo" xml:space="preserve">
    <value>Offer number</value>
  </data>
  <data name="nadpis" xml:space="preserve">
    <value>Order detail</value>
  </data>
  <data name="NazevDodavatele" xml:space="preserve">
    <value>Supplier name</value>
  </data>
  <data name="Neodeslano" xml:space="preserve">
    <value>Not send</value>
  </data>
  <data name="Nepodepsano" xml:space="preserve">
    <value>Not signed</value>
  </data>
  <data name="neuvedeno" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="neverejny" xml:space="preserve">
    <value>Neveřejný požadavek</value>
  </data>
  <data name="ObjNeodesilat" xml:space="preserve">
    <value>Do not send the order</value>
  </data>
  <data name="Odeslano" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="OdeslanoVedouci" xml:space="preserve">
    <value>Send to manager</value>
  </data>
  <data name="PDFgen" xml:space="preserve">
    <value>A PDF file is generated, which is also stored in the enclosed files</value>
  </data>
  <data name="PlatbaVlastniText" xml:space="preserve">
    <value>Custom payment text</value>
  </data>
  <data name="Podepsano" xml:space="preserve">
    <value>Signed</value>
  </data>
  <data name="PodepsanoReditel" xml:space="preserve">
    <value>Signed by Director or Controlling and sent to order:</value>
  </data>
  <data name="PodepsanoVedouci" xml:space="preserve">
    <value>Signed by manager</value>
  </data>
  <data name="popis" xml:space="preserve">
    <value>A general description (title) of the request</value>
  </data>
  <data name="PozadavekPozn1" xml:space="preserve">
    <value>You can send your request for approval again</value>
  </data>
  <data name="PozadavekZalozen" xml:space="preserve">
    <value>Request created</value>
  </data>
  <data name="PozadavekZamitnut" xml:space="preserve">
    <value>The request was REJECTED!</value>
  </data>
  <data name="Poznamka" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="PrilozeneSoubory" xml:space="preserve">
    <value>Attached files</value>
  </data>
  <data name="PriraditDodavatele" xml:space="preserve">
    <value>Assign supplier to request</value>
  </data>
  <data name="Schalovatel" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="Uzivatelem" xml:space="preserve">
    <value>by user</value>
  </data>
  <data name="VybrDodavatel" xml:space="preserve">
    <value>Selected supplier</value>
  </data>
  <data name="zalozil" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="zastoupeni" xml:space="preserve">
    <value>On behalf of (name.surname)</value>
  </data>
  <data name="ZpusobPlatby" xml:space="preserve">
    <value>Method of payment</value>
  </data>
  <data name="ZvolteCisloInvestice" xml:space="preserve">
    <value>Select the investment number</value>
  </data>
  <data name="ZvolteDodavatele" xml:space="preserve">
    <value>Choose supplier ...</value>
  </data>
  <data name="ZvolteKonto" xml:space="preserve">
    <value>Select the account number</value>
  </data>
  <data name="InvesticePlan" xml:space="preserve">
    <value>Planned investment</value>
  </data>
  <data name="JinyNevyhovuje" xml:space="preserve">
    <value>Any other material or another supplier would be unsatisfactory and incompatible with JULI Motorenwerk current and future production or operation</value>
  </data>
  <data name="ModelZar" xml:space="preserve">
    <value>Model device</value>
  </data>
  <data name="NakupyOst" xml:space="preserve">
    <value>Other purchases</value>
  </data>
  <data name="PocetPol" xml:space="preserve">
    <value>Number of items:</value>
  </data>
  <data name="PopisteDuvody" xml:space="preserve">
    <value>Please describe the reason</value>
  </data>
  <data name="Poptany3" xml:space="preserve">
    <value>Have three companies been asked?</value>
  </data>
  <data name="RozuctovatPopis" xml:space="preserve">
    <value>enter the quantity that belongs to this item, a new item will be created with the remaining quantity</value>
  </data>
  <data name="TypInvestice" xml:space="preserve">
    <value>Investment type</value>
  </data>
  <data name="Zduvodneni" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="IntPoznamka" xml:space="preserve">
    <value>Internal note</value>
  </data>
  <data name="ModalConfirmNadpis" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Rozuctovat" xml:space="preserve">
    <value>Split</value>
  </data>
  <data name="Ukoncit" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CancelObj" xml:space="preserve">
    <value>Return from the signing process</value>
  </data>
  <data name="DatumObjSchvalena" xml:space="preserve">
    <value>Signature date:</value>
  </data>
  <data name="DatumOdeslani" xml:space="preserve">
    <value>Date of send:</value>
  </data>
  <data name="DodaciPodm" xml:space="preserve">
    <value>Terms of delivery</value>
  </data>
  <data name="DodPodmVyber" xml:space="preserve">
    <value>Choose delivery condition ...</value>
  </data>
  <data name="dokoncena" xml:space="preserve">
    <value>completed</value>
  </data>
  <data name="DruhCeny" xml:space="preserve">
    <value>Price type</value>
  </data>
  <data name="DruhCenyVyber" xml:space="preserve">
    <value>Choose price type ...</value>
  </data>
  <data name="HlRada" xml:space="preserve">
    <value>Main line</value>
  </data>
  <data name="IntCislo" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="ModalConfirm1" xml:space="preserve">
    <value>ORDER HAS BEEN SENT TO SIGN!!!</value>
  </data>
  <data name="ModalConfirm2" xml:space="preserve">
    <value>Sending for signature will be canceled and you need to send the order again!</value>
  </data>
  <data name="ModalConfirm3" xml:space="preserve">
    <value>Proceed?</value>
  </data>
  <data name="NahledObj" xml:space="preserve">
    <value>Order preview</value>
  </data>
  <data name="NahledPotvrzeni" xml:space="preserve">
    <value>Confirmation preview</value>
  </data>
  <data name="NebudeOdeslana" xml:space="preserve">
    <value>Order will NOT be sent.</value>
  </data>
  <data name="Neodesilat" xml:space="preserve">
    <value>DO NOT SEND</value>
  </data>
  <data name="ObjCislo" xml:space="preserve">
    <value>Order number</value>
  </data>
  <data name="Objednavka" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="ObjednavkaByla" xml:space="preserve">
    <value>The order was</value>
  </data>
  <data name="ObjednavkaNaOdesl" xml:space="preserve">
    <value>The order can be sent</value>
  </data>
  <data name="ObjVytvorena" xml:space="preserve">
    <value>Order created and sent for sign!</value>
  </data>
  <data name="PlatPodm" xml:space="preserve">
    <value>Payment Terms</value>
  </data>
  <data name="PlatPodmVyber" xml:space="preserve">
    <value>Choose payment condition ...</value>
  </data>
  <data name="PolObj" xml:space="preserve">
    <value>Items in the order</value>
  </data>
  <data name="PoznPoz" xml:space="preserve">
    <value>Comments from the requests</value>
  </data>
  <data name="storno" xml:space="preserve">
    <value>CANCELED!</value>
  </data>
  <data name="StornoObj" xml:space="preserve">
    <value>CANCEL the order</value>
  </data>
  <data name="StornoPotvrzeni" xml:space="preserve">
    <value>Do you really want to cancel your order?</value>
  </data>
  <data name="Tisk" xml:space="preserve">
    <value>PRINT</value>
  </data>
  <data name="UlozitKoncept" xml:space="preserve">
    <value>Save concept</value>
  </data>
  <data name="VlText" xml:space="preserve">
    <value>Please enter your own text</value>
  </data>
  <data name="VyraditPolozku" xml:space="preserve">
    <value>Delete item from order</value>
  </data>
  <data name="VytisknutoDne" xml:space="preserve">
    <value>Printed of the day:</value>
  </data>
  <data name="Vytisteno" xml:space="preserve">
    <value>Order printed on the day</value>
  </data>
  <data name="zamitnuta" xml:space="preserve">
    <value>REJECTED!</value>
  </data>
  <data name="ZaraditObjednavku" xml:space="preserve">
    <value>Create the order</value>
  </data>
  <data name="ZaraditObjednavkuPotvrzeni" xml:space="preserve">
    <value>Do you really want to create your order and send it for sign?</value>
  </data>
</root>